name: R Package Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v1.1.0, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: 'release'
        use-public-rspm: true
        
    - name: Setup Pandoc
      uses: r-lib/actions/setup-pandoc@v2
    
    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev
        
    - name: Install R dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        extra-packages: |
          any::devtools
          any::pkgbuild
          any::desc
          any::rcmdcheck
        dependencies: '"all"'
        
    - name: Check package
      env:
        _R_CHECK_CRAN_INCOMING_REMOTE_: false
        _R_CHECK_FORCE_SUGGESTS_: false
      run: |
        options(crayon.enabled = TRUE)
        rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
      shell: Rscript {0}
        
    - name: Build vignettes
      run: |
        devtools::build_vignettes()
      shell: Rscript {0}
        
    - name: Build source package
      run: |
        # Use R CMD build instead of pkgbuild::build to ensure proper vignette handling
        system("R CMD build .")
      shell: Rscript {0}
        
    - name: Get package info
      id: package_info
      run: |
        PACKAGE_NAME=$(Rscript -e "cat(desc::desc_get_field('Package'))")
        PACKAGE_VERSION=$(Rscript -e "cat(desc::desc_get_field('Version'))")
        TARBALL="${PACKAGE_NAME}_${PACKAGE_VERSION}.tar.gz"
        echo "package_name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT
        echo "package_version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
        echo "tarball=${TARBALL}" >> $GITHUB_OUTPUT
        echo "Package: ${PACKAGE_NAME}"
        echo "Version: ${PACKAGE_VERSION}"
        echo "Tarball: ${TARBALL}"
        
    - name: Verify tarball exists
      run: |
        ls -la ${{ steps.package_info.outputs.tarball }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ steps.package_info.outputs.tarball }}
        name: Release ${{ steps.package_info.outputs.package_version }}
        body: |
          ## quanteda.extras ${{ steps.package_info.outputs.package_version }}
          
          🎉 **CRAN-ready source package for quanteda.extras**
          
          ### 📦 Installation from Release
          
          Download the `.tar.gz` file below and install with:
          
          ```r
          # Install from downloaded file
          install.packages("path/to/${{ steps.package_info.outputs.tarball }}", 
                          repos = NULL, type = "source")
          ```
          
          ### 📋 CRAN Submission Ready
          
          This tarball has been built with `R CMD build` and has passed `R CMD check --as-cran`. 
          It's ready for submission to CRAN.
          
          ### 🔍 Package Contents
          
          - **Package**: ${{ steps.package_info.outputs.package_name }}
          - **Version**: ${{ steps.package_info.outputs.package_version }}
          - **Built with**: R (latest release)
          - **Platform**: ubuntu-latest
          
          ### 📝 Changes
          
          See [NEWS.md](https://github.com/${{ github.repository }}/blob/main/NEWS.md) for detailed changes in this version.
        draft: false
        prerelease: false
        generate_release_notes: true
